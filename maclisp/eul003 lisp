(fasload suport)

; Function that checks if n divides x
(defun divides (x n) (= (mod x n) 0))

; Function that generates a list of all the integer factors of n
(defun factors (n) (loop for x from 2 to (ceiling (sqrt n)) if (divides n x) append (list x (quotient n x))))

; Function that returns n if prime, 0 if not.
(defun iseprime (n) (if (oddp n ) (if (not (factors n)) n 0) 0 ))
(defun isprime (n) (if (not (factors n)) n 0))

; grab the first item of a sorted list of prime factors.
(defun sol (n) (car (sort (mapcar #'isprime (factors n)) '>)))
(defun sole (n) (car (sort (mapcar #'iseprime (factors n)) '>)))

(defun bencheul (n)
   (terpri)
   (setq tbase base)
   (setq base 10.)

   (setq t0 (time))
   (setq r1 (sol n))
   (setq t1 (time))
   (setq r2 (sole n))
   (setq t2 (time))
   (terpri)
   (princ "      Result (old): ")(princ r1)(terpri)
   (princ "Time elapsed (old): ")(princ (-$ t1 t0))(princ " seconds")
   (terpri)
   (princ "      Result (new): ")(princ r2)(terpri)
   (princ "Time elapsed (new): ")(princ (-$ t2 t1))(princ " seconds")
   (terpri)
)
